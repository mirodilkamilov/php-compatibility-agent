{
  "reserved_keywords": [],
  "removed_functions": [],
  "behavior_changes": [],
  "removed_syntax": [],
  "others": [
    {
      "key": null,
      "description": "The following extension class constants now declare a type on their\n   constants:\n   \n    Date\n    Intl\n    PDO\n    Reflection\n    SPL\n    Sqlite\n    XMLReader",
      "related": "Extension Class Constants which are now Typed"
    },
    {
      "key": null,
      "description": "imagejpeg\n     imagewebp\n     imagepng\n     imageavif\n    \n    now throw a ValueError when an invalid\n    quality is passed.",
      "related": "New warnings and exceptions"
    },
    {
      "key": null,
      "description": "bind_textdomain_codeset\n     textdomain\n     d*gettext\n    \n    now throw a ValueError if\n    domain is the empty string.",
      "related": "New warnings and exceptions"
    },
    {
      "key": null,
      "description": "resourcebundle_get,\n    ResourceBundle::get, and accessing offsets on\n    a ResourceBundle object now throw:\n    \n     \n      TypeError for invalid offset types\n     \n     \n      ValueError for an empty \n     \n     \n      ValueError if the integer index does\n      not fit in a signed 32 bit integer",
      "related": "New warnings and exceptions"
    },
    {
      "key": null,
      "description": "The pcntl_sigprocmask,\n    pcntl_sigwaitinfo, and\n    pcntl_sigtimedwait functions now throw:\n    \n     \n      A ValueError if the\n      signals array is empty\n      (except for pcntl_sigprocmask if the\n      mode SIG_SETMASK)\n     \n     \n      A TypeError if a value of the\n      signals array is not an \n     \n     \n      A ValueError if a value of the\n      signals array is not a valid signal number",
      "related": "New warnings and exceptions"
    },
    {
      "key": null,
      "description": "The pcntl_sigtimedwait function now throw:\n    \n     \n      A ValueError if\n      seconds is less than 0\n     \n     \n      A ValueError if\n      nanoseconds is less than 0\n      or greater than 1e9\n     \n     \n      A ValueError if both\n      seconds and nanoseconds\n      are 0",
      "related": "New warnings and exceptions"
    },
    {
      "key": null,
      "description": "number symbols in relative formats\n   once again accept multiple signs, e.g. +-2.",
      "related": "Date"
    },
    {
      "key": null,
      "description": "This could cause unexpected infinite loops as the iterator was rewound.\n   For example:\n   \n    \n\n<?php\n\n$xmlString = \"<root><a><b>1</b><b>2</b><b>3</b></a></root>\";\n$xml = simplexml_load_string($xmlString);\n\n$nodes = $xml->a->b;\nforeach ($nodes as $nodeData) {\n    echo \"nodeData: \" . $nodeData . \"\\n\";\n\n    $xml = $nodes->asXml();\n}\n\n\n    \n    \n     would result in an infinite loop.\n    \n    \n\nnodeData: 1\nnodeData: 2\nnodeData: 2\nnodeData: 2\nnodeData: 2\nnodeData: 2\nnodeData: 2\n// ...\n\n    \n    \n     However, this behavior has now been corrected, and a\n     SimpleXMLElement will no longer implicitly reset\n     the iterator data, unless explicitly rewound.\n     Meaning the previous example would now result in:\n    \n    \n\nnodeData: 1\nnodeData: 2\nnodeData: 3",
      "related": "SimpleXML"
    }
  ]
}